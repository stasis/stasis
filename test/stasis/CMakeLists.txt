IF(CHECK_LIBRARY)
  CREATE_CHECK(check_lhtable)
  CREATE_CHECK(check_logEntry)
  CREATE_CHECK(check_logWriter)
  CREATE_CHECK(check_page)
  CREATE_CHECK(check_operations)
  CREATE_CHECK(check_transactional2)
  CREATE_CHECK(check_recovery)
  CREATE_CHECK(check_blobRecovery)
  CREATE_CHECK(check_bufferManager)
  CREATE_CHECK(check_indirect)
  CREATE_CHECK(check_pageOperations)
  CREATE_CHECK(check_linearHash)
  CREATE_CHECK(check_logicalLinearHash)
  CREATE_CHECK(check_header)
  CREATE_CHECK(check_linkedListNTA)
  CREATE_CHECK(check_linearHashNTA)
  CREATE_CHECK(check_pageOrientedList)
  CREATE_CHECK(check_lockManager)
  CREATE_CHECK(check_compensations)
  CREATE_CHECK(check_errorHandling)
  CREATE_CHECK(check_ringbuffer)
  CREATE_CHECK(check_iterator)
  CREATE_CHECK(check_multiplexer)
  CREATE_CHECK(check_bTree)
  CREATE_CHECK(check_regions)
  CREATE_CHECK(check_allocationPolicy)
  CREATE_CHECK(check_io)
  CREATE_CHECK(check_rangeTracker)
  CREATE_CHECK(check_replacementPolicy)
  CREATE_CHECK(check_lsmTree)
ENDIF(CHECK_LIBRARY)
# check_logEntry check_logWriter check_page check_operations check_transactional2 check_recovery check_blobRecovery check_bufferManager check_indirect check_pageOperations check_linearHash  check_logicalLinearHash check_header check_linkedListNTA check_linearHashNTA check_pageOrientedList check_lockManager check_compensations check_errorHandling check_ringbuffer check_iterator check_multiplexer check_bTree check_regions check_allocationPolicy check_io check_rangeTracker check_replacementPolicy check_lsmTree)
