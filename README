( This is a special branch of LLADD that is designed to work with blast. ) 


LLADD is an experimental Lightweight Library for Atomicity and Durability of Data.

Please see the COPYING file for licensing information.  

To build, do:

./configure
make
make check
make install

To build the API and internals documentation, run:

make docs

after configure.

'make check' requires the GNU check library, 'make doc' requires Doxygen.

We haven't tested make install. ;)

If you want to install check to a non-standard location, try this:

./configure --with-check=/home/eecs/sears/check


This package contains a copy of Peter Graf's Program Base Library, PBL, which is
distributed under the terms of the LGPL.

The original version can be found at:

http://mission.base.com/peter/source/

LLADD's version of the package adds the jbhash.* files, and compiles PBL using
LLADD's make files.  Currently, LLADD's hash table implementations are based upon
code from PBL, and pbl is used in a number of places throughout LLADD.

In order to use gcc's profiling and coverage tools (gprof, and gcov, respectively),
 execute this command:

export CFLAGS="-fprofile-arcs -ftest-coverage -pg -O0"
./configure
make clean
make check


The 'make check' step will output profiles and test coverage that reflects the test
cases.  You can simply invoke 'make' if you are interested in profiling the 
library for a specific program.

To produce the gcov output, you may then run this command in src/

ls *.c logger/*.c operations/*.c page/*.c | xargs -n 1 gcov | grep  executed | sort -k1,1n

Or, run this:

lcov -c --directory .  > tmp.info
genhtml tmp.info

For HTML output.
